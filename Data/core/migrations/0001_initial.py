# Generated by Django 2.2.16 on 2021-02-22 20:09

import Utils.managers
import Utils.models
import Utils.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='fecha edición')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe otra cuenta asociada a este correo electrónico.'}, max_length=254, null=True, unique=True, verbose_name='email')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('is_staff', models.BooleanField(help_text='Al ser Staff se permite acceso al administrador.', null=True, verbose_name='staff status')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='active')),
                ('is_verified', models.BooleanField(blank=True, null=True, verbose_name='verificado')),
                ('date_verified', models.DateTimeField(blank=True, null=True, verbose_name='fecha de verificacion')),
                ('is_superuser', models.BooleanField(help_text='Un usuario Superusuario tiene privilegios totales sobre el sitio.', null=True, verbose_name='superusuario')),
                ('first_login', models.BooleanField(blank=True, null=True, verbose_name='¿Primer ingreso?')),
                ('reset_password', models.BooleanField(blank=True, null=True, verbose_name='cambiar contraseña')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='clave de sesión')),
                ('success_login_counter', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='cant. de accesos')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='ultima actividad')),
                ('fail_login_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='cant. de intentos de acceso')),
                ('last_pass_change', models.DateTimeField(blank=True, null=True, verbose_name='ultimo cambio de password')),
                ('last_campaign_rol', models.CharField(blank=True, choices=[('ORGANIZADOR', 'Organizador'), ('CANDIDATO', 'Candidato'), ('COLABORADOR', 'Colaborador'), ('VALUADOR', 'Valuador')], max_length=15, null=True, verbose_name='ultimo rol en campaña')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_created', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', Utils.managers.UserEmailManager()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='fecha edición')),
                ('key', Utils.models.KeyCharField(max_length=50, unique=True, validators=[Utils.validators.ModelValidator.check_DontHaveWhitespaces], verbose_name='clave')),
                ('description', Utils.models.DescriptionCharField(max_length=144, null=True, verbose_name='descripción')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comentarios')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_created', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_updated', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'Acción',
                'verbose_name_plural': 'Acciones',
            },
        ),
        migrations.CreateModel(
            name='GlobalVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, null=True, verbose_name='clave')),
                ('description', models.TextField(blank=True, null=True, verbose_name='descripción')),
                ('value', models.TextField(blank=True, null=True, verbose_name='valor')),
            ],
            options={
                'verbose_name': 'Valor de configuración',
                'verbose_name_plural': 'Configuraciones Globales',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True, verbose_name='clave')),
                ('name', models.CharField(max_length=50, verbose_name='nombre')),
                ('route', models.CharField(blank=True, max_length=200, null=True, verbose_name='ruta')),
                ('active', models.BooleanField(null=True, verbose_name='activo')),
            ],
            options={
                'verbose_name': 'Modulo',
                'verbose_name_plural': 'Modulos',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='fecha edición')),
                ('key', models.CharField(max_length=50, unique=True, validators=[Utils.validators.ModelValidator.check_DontHaveWhitespaces], verbose_name='clave')),
                ('description', Utils.models.DescriptionCharField(max_length=144, null=True, verbose_name='descripción')),
                ('web_id', Utils.models.KeyCharField(blank=True, max_length=50, null=True, validators=[Utils.validators.ModelValidator.check_DontHaveWhitespaces], verbose_name='ID en Web')),
                ('label', models.CharField(blank=True, max_length=144, null=True, verbose_name='Etiqueta')),
                ('icon', models.CharField(blank=True, max_length=144, null=True, verbose_name='Icon')),
                ('is_menuoption', models.BooleanField(null=True, verbose_name='mostrar en menú')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comentarios')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='page_created', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='page_updated', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'Página',
                'verbose_name_plural': 'Páginas',
            },
        ),
        migrations.CreateModel(
            name='PageAllowed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='fecha edición')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pageallowed_created', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='in_menu', to='core.Page', verbose_name='página')),
            ],
            options={
                'verbose_name': 'Opción de menú',
                'verbose_name_plural': 'Menu',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Action', verbose_name='acción')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Module', verbose_name='modulo')),
            ],
            options={
                'verbose_name': 'Permiso',
                'verbose_name_plural': 'Permisos',
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True, verbose_name='nombre')),
                ('type', models.CharField(choices=[('SMTP', 'Servidor de envio de Emails'), ('PB', 'Base de datos')], default='SMTP', max_length=10, null=True, verbose_name='tipo')),
                ('host', models.CharField(blank=True, max_length=150, null=True, verbose_name='host')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='puerto')),
                ('username', models.CharField(blank=True, max_length=150, null=True, verbose_name='usuario')),
                ('password', models.CharField(blank=True, max_length=150, null=True, verbose_name='contraseña')),
                ('use_tls', models.BooleanField(default=False, verbose_name='TLS')),
                ('fail_silently', models.BooleanField(null=True, verbose_name='errores en silencio')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comentarios')),
            ],
            options={
                'verbose_name': 'Servicio de Terceros',
                'verbose_name_plural': 'Servicios de Terceros',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='nombre')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('pages', models.ManyToManyField(blank=True, related_name='assigned_to', through='core.PageAllowed', to='core.Page', verbose_name='Paginas permitidas')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='core.Position', verbose_name='puesto padre')),
                ('permissions', models.ManyToManyField(blank=True, related_name='assigned_to', through='core.Permission', to='core.Module', verbose_name='Permisos')),
                ('start_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='startpage_in', to='core.Page', verbose_name='página de inicio')),
            ],
            options={
                'verbose_name': 'Puesto',
                'verbose_name_plural': 'Puestos',
            },
        ),
        migrations.AddField(
            model_name='permission',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Position', verbose_name='puesto'),
        ),
        migrations.AddField(
            model_name='pageallowed',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pages_allowed', to='core.Position', verbose_name='puesto'),
        ),
        migrations.AddField(
            model_name='pageallowed',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pageallowed_updated', to=settings.AUTH_USER_MODEL, verbose_name='editado por'),
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=144, null=True, verbose_name='nombre')),
                ('token', models.CharField(blank=True, max_length=144, null=True, verbose_name='token')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='integrations', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'Integración',
                'verbose_name_plural': 'Integraciones',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha edición')),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'Ya existe otra cuenta asociada a este correo electrónico.'}, max_length=254, null=True, verbose_name='email')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('is_staff', models.BooleanField(help_text='Al ser Staff se permite acceso al administrador.', null=True, verbose_name='staff status')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='active')),
                ('is_verified', models.BooleanField(blank=True, null=True, verbose_name='verificado')),
                ('date_verified', models.DateTimeField(blank=True, null=True, verbose_name='fecha de verificacion')),
                ('is_superuser', models.BooleanField(help_text='Un usuario Superusuario tiene privilegios totales sobre el sitio.', null=True, verbose_name='superusuario')),
                ('first_login', models.BooleanField(blank=True, null=True, verbose_name='¿Primer ingreso?')),
                ('reset_password', models.BooleanField(blank=True, null=True, verbose_name='cambiar contraseña')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='clave de sesión')),
                ('success_login_counter', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='cant. de accesos')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='ultima actividad')),
                ('fail_login_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='cant. de intentos de acceso')),
                ('last_pass_change', models.DateTimeField(blank=True, null=True, verbose_name='ultimo cambio de password')),
                ('last_campaign_rol', models.CharField(blank=True, choices=[('ORGANIZADOR', 'Organizador'), ('CANDIDATO', 'Candidato'), ('COLABORADOR', 'Colaborador'), ('VALUADOR', 'Valuador')], max_length=15, null=True, verbose_name='ultimo rol en campaña')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('position', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Position', verbose_name='puesto')),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'historical user',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalThirdPartyService',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, null=True, verbose_name='nombre')),
                ('type', models.CharField(choices=[('SMTP', 'Servidor de envio de Emails'), ('PB', 'Base de datos')], default='SMTP', max_length=10, null=True, verbose_name='tipo')),
                ('host', models.CharField(blank=True, max_length=150, null=True, verbose_name='host')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='puerto')),
                ('username', models.CharField(blank=True, max_length=150, null=True, verbose_name='usuario')),
                ('password', models.CharField(blank=True, max_length=150, null=True, verbose_name='contraseña')),
                ('use_tls', models.BooleanField(default=False, verbose_name='TLS')),
                ('fail_silently', models.BooleanField(null=True, verbose_name='errores en silencio')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comentarios')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Servicio de Terceros',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPageAllowed',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha edición')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Page', verbose_name='página')),
                ('position', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Position', verbose_name='puesto')),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'historical Opción de menú',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha edición')),
                ('key', models.CharField(db_index=True, max_length=50, validators=[Utils.validators.ModelValidator.check_DontHaveWhitespaces], verbose_name='clave')),
                ('description', Utils.models.DescriptionCharField(max_length=144, null=True, verbose_name='descripción')),
                ('web_id', Utils.models.KeyCharField(blank=True, max_length=50, null=True, validators=[Utils.validators.ModelValidator.check_DontHaveWhitespaces], verbose_name='ID en Web')),
                ('label', models.CharField(blank=True, max_length=144, null=True, verbose_name='Etiqueta')),
                ('icon', models.CharField(blank=True, max_length=144, null=True, verbose_name='Icon')),
                ('is_menuoption', models.BooleanField(null=True, verbose_name='mostrar en menú')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comentarios')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'historical Página',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGlobalVariable',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('key', models.CharField(max_length=100, null=True, verbose_name='clave')),
                ('description', models.TextField(blank=True, null=True, verbose_name='descripción')),
                ('value', models.TextField(blank=True, null=True, verbose_name='valor')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Valor de configuración',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAction',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha edición')),
                ('key', Utils.models.KeyCharField(db_index=True, max_length=50, validators=[Utils.validators.ModelValidator.check_DontHaveWhitespaces], verbose_name='clave')),
                ('description', Utils.models.DescriptionCharField(max_length=144, null=True, verbose_name='descripción')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comentarios')),
                ('is_active', models.BooleanField(null=True, verbose_name='activo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'historical Acción',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='fecha edición')),
                ('activity', models.CharField(blank=True, max_length=100, null=True, verbose_name='acción')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('origin', models.CharField(blank=True, max_length=50, null=True, verbose_name='origen')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='activitylog_created', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='activitylog_updated', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'Log de acciones',
                'verbose_name_plural': 'Logs de acciones',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assign_to', to='core.Position', verbose_name='puesto'),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_updated', to=settings.AUTH_USER_MODEL, verbose_name='editado por'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='permission',
            unique_together={('module', 'position')},
        ),
        migrations.AlterUniqueTogether(
            name='pageallowed',
            unique_together={('position', 'page')},
        ),
    ]
